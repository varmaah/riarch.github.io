{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cursoral/cursoral/cursoral.component.css","webpack:///./src/app/cursoral/cursoral/cursoral.component.html","webpack:///./src/app/cursoral/cursoral/cursoral.component.ts","webpack:///./src/app/test/test.component.css","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.ts","webpack:///./src/app/top-nav/top-navigation/top-navigation.component.css","webpack:///./src/app/top-nav/top-navigation/top-navigation.component.html","webpack:///./src/app/top-nav/top-navigation/top-navigation.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n\"","module.exports = \"<app-top-navigation></app-top-navigation>\\n<app-cursoral></app-cursoral>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  flag = false;\n  title = 'bootstrap-project';\n\n  changeFlag() {\n    this.flag = !this.flag;\n  }\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TestLibraryModule } from 'test-library';\nimport { TestComponent } from './test/test.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { TopNavigationComponent } from './top-nav/top-navigation/top-navigation.component';\nimport { CursoralComponent } from './cursoral/cursoral/cursoral.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent,\n    TopNavigationComponent,\n    CursoralComponent\n  ],\n  imports: [\n    BrowserModule,\n    TestLibraryModule,\n    NgxPaginationModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide test\\\" data-ride=\\\"carousel\\\">\\n  <ol class=\\\"carousel-indicators\\\">\\n    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"1\\\"></li>\\n    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"2\\\"></li>\\n  </ol>\\n  <div class=\\\"carousel-inner\\\">\\n      <div class=\\\"carousel-item active\\\">\\n          <img class=\\\"d-block w-100\\\" src=\\\"../../../assets/one.jpg\\\" alt=\\\"First slide\\\">\\n        </div>\\n    <div class=\\\"carousel-item \\\">\\n      <img class=\\\"d-block w-100\\\" src=\\\"../../../assets/photo-1495431088732-09e59535d241.jpg\\\" alt=\\\"Third slide\\\">\\n    </div>\\n    <div class=\\\"carousel-item\\\">\\n      <img class=\\\"d-block w-100\\\" src=\\\"../../../assets/photo-1456611984355-c05be968ebe9.jpg\\\" alt=\\\"Second slide\\\">\\n    </div>\\n   \\n  </div> \\n  <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n    <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n    <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\\n<!-- <div class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n  <div class=\\\"carousel-inner bg-info\\\" role=\\\"listbox\\\">\\n        <div class=\\\"carousel-item active\\\">\\n            <div class=\\\"d-flex align-items-center justify-content-center min-vh-100\\\">\\n                <h1 class=\\\"display-1\\\">ONE</h1>\\n            </div>\\n        </div>\\n  </div>\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cursoral',\n  templateUrl: './cursoral.component.html',\n  styleUrls: ['./cursoral.component.css']\n})\nexport class CursoralComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".test{\\r\\n  margin: 50px auto auto;\\r\\n  width: 500px;\\r\\n  border: 1px solid black;\\r\\n  box-shadow: 5px 10px 8px #888;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"test\\\">\\n  <div *ngFor=\\\"let car of cars| paginate: { itemsPerPage: 5, currentPage: p }\\\">\\n    <p>{{car}}</p>\\n    <hr>\\n  </div>\\n  <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  p = 1;\n  cars = ['Saab', 'Volvo', 'BMW', 'Saab', 'Volvo', 'BMW', 'Saab', 'Volvo', 'BMW', 'Saab', 'Volvo', 'BMW', 'Saab', 'Volvo', 'BMW'];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark sticky-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">RIARCH</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n     </button>\\n     <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n       <ul class=\\\"navbar-nav ml-auto\\\">\\n         <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">About</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\">Services</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\">Team</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\">Connect</a>\\n          </li>\\n       </ul>\\n     </div>\\n  </div>\\n</nav> \\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-navigation',\n  templateUrl: './top-navigation.component.html',\n  styleUrls: ['./top-navigation.component.css']\n})\nexport class TopNavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}